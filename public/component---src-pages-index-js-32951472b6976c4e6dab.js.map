{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["pageQuery","IndexPage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","nextPage","toString","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel"],"mappings":"4SA8EaA,EAAS,YAwCPC,UA5GG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAEhCG,EAAW,GAAkBC,WAenC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,OACNC,SAAU,CAAC,SAAD,2DASZ,yBAAKC,UAAU,cACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACZV,EAAMW,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAChC,kBAAC,OAAD,CAAMQ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,aACzC,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAE/C,2BAAOE,UAAU,qBACf,wCAAcE,EAAKE,KAAKC,YAAYM,OAEtC,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CAAMJ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,gBACzC,2BAAOA,UAAU,uBAAjB,oBAEF,yBAAKA,UAAU,WA7CT,SAACG,GACnB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACjBvB,EAAOqB,SAAQ,SAACG,GACVF,IAAQE,EAAMF,KAChBF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIjHT,EAoC+BU,CAAYpB,QAI5C,yBAAKH,UAAU,oBACb,0BAAMA,UAAU,WACd,kBAAC,OAAD,CAAMQ,GAAIZ,EAAU4B,IAAI,OAAOxB,UAAU,gBAAzC","file":"component---src-pages-index-js-32951472b6976c4e6dab.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  const labels = data.site.siteMetadata.labels\r\n  const currentPage = 1\r\n  const nextPage = (currentPage + 1).toString()\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = []\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n        }\r\n      })\r\n    })\r\n    return techTags\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title=\"Home\"\r\n        keywords={[\r\n          `gatsby`,\r\n          `javascript`,\r\n          `react`,\r\n          `web development`,\r\n          `blog`,\r\n          `graphql`,\r\n        ]}\r\n      />\r\n      <div className=\"index-main\">\r\n        <div className=\"sidebar px-3\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"post-list-main\">\r\n          {posts.map((post) => {\r\n            const tags = post.node.frontmatter.tags;\r\n            return (\r\n              <div key={post.node.id} className=\"container mt-5\">\r\n                <Link to={post.node.fields.slug} className=\"text-dark\">\r\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                </Link>\r\n                <small className=\"d-block text-info\">\r\n                  <i>Posted on {post.node.frontmatter.date}</i>\r\n                </small>\r\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                <Link to={post.node.fields.slug} className=\"text-primary\">\r\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                </Link>\r\n                <div className=\"d-block\">{getTechTags(tags)}</div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"text-center my-4\">\r\n            <span className='pagenum'>\r\n              <Link to={nextPage} rel=\"next\" className=\"pagenum-link\">\r\n                Next Page â†’\r\n              </Link>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query IndexQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 5\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default IndexPage\r\n\r\n"],"sourceRoot":""}