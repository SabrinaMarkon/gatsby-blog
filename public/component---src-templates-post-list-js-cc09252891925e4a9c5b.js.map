{"version":3,"sources":["webpack:///./src/templates/post-list.js"],"names":["listQuery","PostList","props","posts","data","allMarkdownRemark","edges","labels","site","siteMetadata","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","style","display","flexWrap","justifyContent","alignItems","listStyle","padding","rel","textDecoration","Array","from","length","_","margin"],"mappings":"iUAoHaA,EAAS,YAyCPC,UAnJE,SAACC,GAChB,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACrCC,EAASL,EAAME,KAAKI,KAAKC,aAAaF,OAFlB,EAGQL,EAAMQ,YAAhCC,EAHkB,EAGlBA,YAAaC,EAHK,EAGLA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAuBnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,MAAM,OACNC,SAAU,CAAC,SAAD,2DASZ,yBAAKC,UAAU,cACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACZjB,EAAMkB,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAChC,kBAAC,OAAD,CAAMQ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,aACzC,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAE/C,2BAAOE,UAAU,qBACf,wCAAcE,EAAKE,KAAKC,YAAYM,OAEtC,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CAAMJ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,gBACzC,2BAAOA,UAAU,uBAAjB,oBAEF,yBAAKA,UAAU,WArDT,SAACG,GACnB,IAAMU,EAAW,GAiBjB,OAhBAV,EAAKW,SAAQ,SAACC,EAAKC,GACjB7B,EAAO2B,SAAQ,SAACG,GACVF,IAAQE,EAAMF,KAChBF,EAASK,KACP,kBAAC,IAAD,CACEZ,IAAKU,EACLD,IAAKE,EAAMF,IACXI,KAAMF,EAAME,KACZC,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZC,MAAOL,EAAMK,eAMhBT,EAmC+BU,CAAYpB,QAI5C,yBAAKH,UAAU,oBACb,wBAAIwB,MAAO,CAACC,QAAS,OAAQC,SAAU,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,UAAW,OAAQC,QAAS,OACvHrC,GACA,kBAAC,OAAD,CACEe,GAAIb,EACJoC,IAAI,OACJP,MAAO,CAAEQ,eAAe,SAExB,0BAAMhC,UAAU,aAAhB,oBAGHiC,MAAMC,KAAK,CAAEC,OAAQ3C,IAAY,SAAC4C,EAAGpB,GAAJ,OAChC,wBAAIQ,MAAO,CAACa,OAAQ,GAAIrC,UAAU,WAChC,kBAAC,OAAD,CACEM,IAAG,qBAAsBU,EAAI,GAC7BR,GAAE,KAAY,IAANQ,EAAU,GAAKA,EAAI,GAC3BhB,UAAU,gBAGTgB,EAAI,QAITtB,GACA,kBAAC,OAAD,CACEc,GAAIX,EACJkC,IAAI,OACJP,MAAO,CAAEQ,eAAe,SAExB,wBAAIhC,UAAU,kBAAd","file":"component---src-templates-post-list-js-cc09252891925e4a9c5b.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../pages/index.css\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Sidebar from \"../components/sidebar/Sidebar\";\r\nimport TechTag from \"../components/tags/TechTag\";\r\n\r\nconst PostList = (props) => {\r\n  const posts = props.data.allMarkdownRemark.edges;\r\n  const labels = props.data.site.siteMetadata.labels;\r\n  const { currentPage, numPages } = props.pageContext;\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = [];\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(\r\n            <TechTag\r\n              key={i}\r\n              tag={label.tag}\r\n              tech={label.tech}\r\n              name={label.name}\r\n              size={label.size}\r\n              color={label.color}\r\n            />\r\n          );\r\n        }\r\n      });\r\n    });\r\n    return techTags;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title=\"Home\"\r\n        keywords={[\r\n          `gatsby`,\r\n          `javascript`,\r\n          `react`,\r\n          `web development`,\r\n          `blog`,\r\n          `graphql`,\r\n        ]}\r\n      />\r\n      <div className=\"index-main\">\r\n        <div className=\"sidebar px-3\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"post-list-main\">\r\n          {posts.map((post) => {\r\n            const tags = post.node.frontmatter.tags;\r\n            return (\r\n              <div key={post.node.id} className=\"container mt-5\">\r\n                <Link to={post.node.fields.slug} className=\"text-dark\">\r\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                </Link>\r\n                <small className=\"d-block text-info\">\r\n                  <i>Posted on {post.node.frontmatter.date}</i>\r\n                </small>\r\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                <Link to={post.node.fields.slug} className=\"text-primary\">\r\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                </Link>\r\n                <div className=\"d-block\">{getTechTags(tags)}</div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"text-center mt-4\">\r\n            <ul style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center', listStyle: 'none', padding: '0'}}>\r\n              {!isFirst && (\r\n                <Link\r\n                  to={prevPage}\r\n                  rel=\"prev\"\r\n                  style={{ textDecoration: `none` }}\r\n                >\r\n                  <span className=\"text-dark\">← Previous Page</span>\r\n                </Link>\r\n              )}\r\n              {Array.from({ length: numPages }, (_, i) => (\r\n                <li style={{margin: 5}} className='pagenum'>\r\n                  <Link\r\n                    key={`pagination-number${i + 1}`}\r\n                    to={`/${i === 0 ? \"\" : i + 1}`}\r\n                    className=\"pagenum-link\"\r\n                    // style={{color: '#ffffff'}}\r\n                  >\r\n                    {i + 1}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n              {!isLast && (\r\n                <Link\r\n                  to={nextPage}\r\n                  rel=\"next\"\r\n                  style={{ textDecoration: `none` }}\r\n                >\r\n                  <li className=\"text-dark ml-5\">Next Page →</li>\r\n                </Link>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const listQuery = graphql`\r\n  query paginateQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        labels {\r\n          tag\r\n          tech\r\n          name\r\n          size\r\n          color\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: $limit\r\n      skip: $skip\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { published: { eq: true } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 200)\r\n          html\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            tags\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PostList;\r\n"],"sourceRoot":""}